// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContex))]
    [Migration("20220429011618_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Infrastructure.Models.Admin", b =>
                {
                    b.Property<Guid>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserDetailIdUserDetail")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdAdmin");

                    b.HasIndex("UserDetailIdUserDetail");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Infrastructure.Models.Classroom", b =>
                {
                    b.Property<Guid>("IdClassroom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdClassroom");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Infrastructure.Models.Homework", b =>
                {
                    b.Property<Guid>("IdHomework")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<decimal>("Point")
                        .HasColumnType("decimal(4,2)");

                    b.Property<Guid?>("StudentInscriptionIdStudentInscription")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdHomework");

                    b.HasIndex("StudentInscriptionIdStudentInscription");

                    b.ToTable("Homeworks");
                });

            modelBuilder.Entity("Infrastructure.Models.Semester", b =>
                {
                    b.Property<Guid>("IdSemester")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<decimal>("Point")
                        .HasColumnType("decimal(4,2)");

                    b.Property<Guid?>("StudentInscriptionIdStudentInscription")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdSemester");

                    b.HasIndex("StudentInscriptionIdStudentInscription");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("Infrastructure.Models.Student", b =>
                {
                    b.Property<Guid>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserDetailIdUserDetail")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdStudent");

                    b.HasIndex("UserDetailIdUserDetail");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Infrastructure.Models.StudentInscription", b =>
                {
                    b.Property<Guid>("IdStudentInscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("StudentIdStudent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeacherInscriptionIdTeacherInscription")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdStudentInscription");

                    b.HasIndex("StudentIdStudent");

                    b.HasIndex("TeacherInscriptionIdTeacherInscription");

                    b.ToTable("StudentInscriptions");
                });

            modelBuilder.Entity("Infrastructure.Models.Subject", b =>
                {
                    b.Property<Guid>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdSubject");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Infrastructure.Models.Teacher", b =>
                {
                    b.Property<Guid>("IdTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserDetailIdUserDetail")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdTeacher");

                    b.HasIndex("UserDetailIdUserDetail");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Infrastructure.Models.TeacherInscription", b =>
                {
                    b.Property<Guid>("IdTeacherInscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomIdClassroom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SubjectIdSubject")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeacherIdTeacher")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdTeacherInscription");

                    b.HasIndex("ClassroomIdClassroom");

                    b.HasIndex("SubjectIdSubject");

                    b.HasIndex("TeacherIdTeacher");

                    b.ToTable("TeacherInscriptions");
                });

            modelBuilder.Entity("Infrastructure.Models.UserDetail", b =>
                {
                    b.Property<Guid>("IdUserDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdUserDetail");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("Infrastructure.Models.Admin", b =>
                {
                    b.HasOne("Infrastructure.Models.UserDetail", "UserDetail")
                        .WithMany()
                        .HasForeignKey("UserDetailIdUserDetail");

                    b.Navigation("UserDetail");
                });

            modelBuilder.Entity("Infrastructure.Models.Homework", b =>
                {
                    b.HasOne("Infrastructure.Models.StudentInscription", "StudentInscription")
                        .WithMany()
                        .HasForeignKey("StudentInscriptionIdStudentInscription");

                    b.Navigation("StudentInscription");
                });

            modelBuilder.Entity("Infrastructure.Models.Semester", b =>
                {
                    b.HasOne("Infrastructure.Models.StudentInscription", "StudentInscription")
                        .WithMany()
                        .HasForeignKey("StudentInscriptionIdStudentInscription");

                    b.Navigation("StudentInscription");
                });

            modelBuilder.Entity("Infrastructure.Models.Student", b =>
                {
                    b.HasOne("Infrastructure.Models.UserDetail", "UserDetail")
                        .WithMany()
                        .HasForeignKey("UserDetailIdUserDetail");

                    b.Navigation("UserDetail");
                });

            modelBuilder.Entity("Infrastructure.Models.StudentInscription", b =>
                {
                    b.HasOne("Infrastructure.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentIdStudent");

                    b.HasOne("Infrastructure.Models.TeacherInscription", "TeacherInscription")
                        .WithMany()
                        .HasForeignKey("TeacherInscriptionIdTeacherInscription");

                    b.Navigation("Student");

                    b.Navigation("TeacherInscription");
                });

            modelBuilder.Entity("Infrastructure.Models.Teacher", b =>
                {
                    b.HasOne("Infrastructure.Models.UserDetail", "UserDetail")
                        .WithMany()
                        .HasForeignKey("UserDetailIdUserDetail");

                    b.Navigation("UserDetail");
                });

            modelBuilder.Entity("Infrastructure.Models.TeacherInscription", b =>
                {
                    b.HasOne("Infrastructure.Models.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomIdClassroom");

                    b.HasOne("Infrastructure.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectIdSubject");

                    b.HasOne("Infrastructure.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherIdTeacher");

                    b.Navigation("Classroom");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
